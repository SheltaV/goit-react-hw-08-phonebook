{"version":3,"file":"static/js/328.d5f39199.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.li`\ndisplay: flex;\nmargin-bottom: 6px;\njustify-content: space-between;\n`\n\nexport const ListItems = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.list;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n[selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact => \n            contact.name.toLowerCase()\n            .includes(filter.toLowerCase())\n        )\n }\n)","import { List, ListItems } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from \"redux/selectors\";\nimport { useEffect } from \"react\";\nimport { deleteContact, fetchContacts } from \"redux/operations\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(selectVisibleContacts);\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n    return (<ListItems>{\n        filteredContacts.map(contact => <List key={contact.id}>\n            {contact.name}: {contact.phone}\n            <button type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>Delete</button>\n    </List>)\n    }\n</ListItems>)\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { addFilter } from \"redux/filterReducer\";\nimport { selectFilter } from \"redux/selectors\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter)\n\n    return (<div>\n        <p>Find contacts by name</p>\n        <input type=\"text\" value={filter} onChange={evt => dispatch(addFilter(evt.target.value))} />\n    </div>)\n}","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormFlex = styled(Form)`\ndisplay: flex;\ngap: 16px;\njustify-content: center;\nborder: 1px solid black;\npadding: 12px 16px;\nwidth: 500px;\n`\n\nexport const Box = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\n`","import { Formik, Field } from 'formik';\nimport { FormFlex, Box } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const checkingContact = contact => {\n        return contacts.find(elem => elem.name.toLowerCase() === contact.name.toLowerCase())\n    }\n\n    const addThisContact = contact => {\n        if (checkingContact(contact)) {\n            return window.alert('Contact already exists.')\n        } else {\n            dispatch(addContact(contact))\n        }\n    }\n\nreturn <Formik\n    initialValues={{\n        name: '',\n        phone: ''\n    }}\n    onSubmit={addThisContact}>\n    <FormFlex>\n    <Box>\n            Name\n        <Field\n    type=\"text\"\n    name=\"name\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    >\n            \n        </Field>\n        </Box>\n    <Box>\n            Number\n            <Field\n    type=\"tel\"\n    name=\"phone\"\n    pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    >\n            \n        </Field>\n        </Box>\n        <button type='submit'>Add contact</button>\n</FormFlex>\n</Formik>\n}","import { Helmet } from 'react-helmet';\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactForm } from \"components/Form/Form\";\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\ndispatch(fetchContacts)\n    }, [dispatch])\n\n    return (\n        <div>\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n            <ContactForm />\n            <Filter/>\n            <ContactList />\n        </div>\n    )\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItems","_templateObject2","selectContacts","state","contacts","list","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactList","dispatch","useDispatch","filteredContacts","useSelector","useEffect","fetchContacts","_jsx","children","map","_jsxs","phone","type","onClick","deleteContact","id","Filter","value","onChange","evt","addFilter","target","FormFlex","Form","Box","ContactForm","Formik","initialValues","onSubmit","find","elem","checkingContact","window","alert","addContact","Field","pattern","title","Contacts","Helmet"],"sourceRoot":""}