{"version":3,"file":"static/js/186.84380f1f.chunk.js","mappings":"oPAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAK,EAC9CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EAErCC,GAAwBC,EAAAA,EAAAA,IACrC,CAACP,EAAgBI,IACb,SAACF,EAAUG,GACP,OAAOH,EACFG,QAAO,SAAAG,GAAO,OACfA,EAAQC,KAAKC,cACZC,SAASN,EAAOK,cAAc,GAE1C,I,4BCXYE,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qMAWhBC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mFAOrBG,EAASL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yP,SCftBK,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,IAAYlB,GAErC,OAAQmB,EAAAA,EAAAA,KAACT,EAAS,CAAAU,SACdH,EAAiBI,KAAI,SAAAnB,GAAO,OAAIoB,EAAAA,EAAAA,MAAChB,EAAI,CAAAc,SAAA,CAChClB,EAAQC,KAAK,KAAGD,EAAQqB,QACzBJ,EAAAA,EAAAA,KAACP,EAAM,CAACY,KAAK,SAASC,QAAS,kBAAMV,GAASW,EAAAA,EAAAA,IAAcxB,EAAQyB,IAAI,EAACP,SAAC,aAFnClB,EAAQyB,GAGhD,KAGX,E,UCdaC,EAAYrB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sFAOtBoB,EAAOtB,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+CAKfqB,EAAQvB,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yBCTpBsB,EAAS,WAClB,IAAMhB,GAAWC,EAAAA,EAAAA,MACXjB,GAASmB,EAAAA,EAAAA,IAAYpB,GAE3B,OAAQwB,EAAAA,EAAAA,MAACM,EAAS,CAAAR,SAAA,EACdD,EAAAA,EAAAA,KAACU,EAAI,CAAAT,SAAC,4BACND,EAAAA,EAAAA,KAACW,EAAK,CAACN,KAAK,OAAOQ,MAAOjC,EAAQkC,SAAU,SAAAC,GAAG,OAAInB,GAASoB,EAAAA,EAAAA,GAAUD,EAAIE,OAAOJ,OAAO,MAEhG,E,oBCVaK,GAAW9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAQvB8B,GAAYhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yBAIzBgC,EAAMlC,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gGAQlBG,EAASL,EAAAA,GAAAA,OAAamC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,0PCftBkC,EAAc,WACvB,IAAM5B,GAAWC,EAAAA,EAAAA,MACXpB,GAAWsB,EAAAA,EAAAA,IAAYxB,GAcjC,OAAOyB,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CACVC,cAAe,CACX1C,KAAM,GACNoB,OAAQ,IAEZuB,SAbuB,SAAA5C,GACnB,GALoB,SAAAA,GACpB,OAAON,EAASmD,MAAK,SAAAC,GAAI,OAAIA,EAAK7C,KAAKC,gBAAkBF,EAAQC,KAAKC,aAAa,GACvF,CAGQ6C,CAAgB/C,GAChB,OAAOgD,EAAAA,GAAAA,MAAY,2BAEnBnC,GAASoC,EAAAA,EAAAA,IAAWjD,GAE5B,EAOyBkB,UACzBE,EAAAA,EAAAA,MAACe,EAAQ,CAAAjB,SAAA,EACTE,EAAAA,EAAAA,MAACmB,EAAG,CAAArB,SAAA,CAAC,QAEDD,EAAAA,EAAAA,KAACoB,EAAS,CACdf,KAAK,OACLrB,KAAK,OACLiD,QAAQ,2HACRC,MAAM,+IAKN/B,EAAAA,EAAAA,MAACmB,EAAG,CAAArB,SAAA,CAAC,UAEGD,EAAAA,EAAAA,KAACoB,EAAS,CAClBf,KAAK,MACLrB,KAAK,SACLiD,QAAQ,qGACRC,MAAM,qGAKFlC,EAAAA,EAAAA,KAACP,EAAM,CAACY,KAAK,SAAQJ,SAAC,sBAG9B,EC9Ce,SAASkC,IACpB,IAAMvC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAuC,EAAAA,EAAAA,YAAU,WACdxC,EAASyC,EAAAA,GACL,GAAG,CAACzC,KAGAO,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACID,EAAAA,EAAAA,KAACsC,EAAAA,EAAM,CAAArC,UACHD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,gBAEXD,EAAAA,EAAAA,KAACwB,EAAW,KACZxB,EAAAA,EAAAA,KAACY,EAAM,KACPZ,EAAAA,EAAAA,KAACL,EAAW,MAGxB,C","sources":["redux/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.list;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n[selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts\n            .filter(contact => \n            contact.name.toLowerCase()\n            .includes(filter.toLowerCase())\n        )\n }\n)","import styled from 'styled-components';\n\nexport const List = styled.li`\ndisplay: flex;\nmargin-bottom: 6px;\njustify-content: space-between;\nalign-items: baseline;\nborder: 2px solid var(--main-color);\nborder-radius: 8px;\npadding: 10px;\nfont-size: 18px;\n`\n\nexport const ListItems = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin: 0 auto;\n`\n\nexport const Button = styled.button`\ndisplay: inline-block;\nwidth: 60px;\nheight: 30px;\nfont-weight: 600;\nfont-size: 16px;\nbackground-color: var(--active-color);\nborder-radius: 6px;\ncursor: pointer;\n\n&:hover,\n&:focus {\n    background-color: var(--main-color);\n  }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from \"redux/selectors\";\nimport { deleteContact } from \"redux/operations\";\nimport { Button, List, ListItems } from './ContactList.styled';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(selectVisibleContacts);\n\n    return (<ListItems>{\n        filteredContacts.map(contact => <List key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>Delete</Button>\n    </List>)\n    }\n</ListItems>)\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;\ngap: 10px;\njustify-content: center;\nalign-items: center;\n`\n\nexport const Text = styled.p`\nfont-weight: 600;\nfont-size: 18px;\n`\n\nexport const Input = styled.input`\nheight: 30px;\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { addFilter } from \"redux/filterReducer\";\nimport { selectFilter } from \"redux/selectors\";\nimport { Container, Input, Text } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter)\n\n    return (<Container>\n        <Text>Find contacts by name:</Text>\n        <Input type=\"text\" value={filter} onChange={evt => dispatch(addFilter(evt.target.value))} />\n    </Container>)\n}","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormFlex = styled(Form)`\ndisplay: flex;\ngap: 16px;\njustify-content: center;\nalign-items: center;\npadding: 12px 16px;\n`\n\nexport const FieldFlex = styled(Field)`\nheight: 30px;\n`\n\nexport const Box = styled.label`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nfont-weight: 600;\nfont-size: 18px;\n`\n\nexport const Button = styled.button`\ndisplay: inline-block;\nmargin-top: 10px;\nwidth: 80px;\nheight: 50px;\nfont-weight: 600;\nbackground-color: var(--active-color);\nborder-radius: 6px;\ncursor: pointer;\n\n&:hover,\n&:focus {\n    background-color: var(--main-color);\n  }\n`","import { Formik } from 'formik';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { FormFlex, Box, Button, FieldFlex } from './Form.styled';\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const checkingContact = contact => {\n        return contacts.find(elem => elem.name.toLowerCase() === contact.name.toLowerCase())\n    }\n\n    const addThisContact = contact => {\n        if (checkingContact(contact)) {\n            return toast.error('Contact already exists.')\n        } else {\n            dispatch(addContact(contact))\n        }\n    }\n\nreturn <Formik\n    initialValues={{\n        name: '',\n        number: ''\n    }}\n    onSubmit={addThisContact}>\n    <FormFlex>\n    <Box>\n            Name\n        <FieldFlex\n    type=\"text\"\n    name=\"name\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    >\n            \n        </FieldFlex>\n        </Box>\n    <Box>\n            Number\n            <FieldFlex\n    type=\"tel\"\n    name=\"number\"\n    pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    >\n            \n        </FieldFlex>\n        </Box>\n        <Button type='submit'>+ Add contact</Button>\n</FormFlex>\n</Formik>\n}","import { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactForm } from \"components/Form/Form\";\nimport { fetchContacts } from 'redux/operations';\n\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\ndispatch(fetchContacts)\n    }, [dispatch])\n\n    return (\n        <div>\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n            <ContactForm />\n            <Filter/>\n            <ContactList />\n        </div>\n    )\n}"],"names":["selectContacts","state","contacts","list","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","List","styled","_templateObject","_taggedTemplateLiteral","ListItems","_templateObject2","Button","_templateObject3","ContactList","dispatch","useDispatch","filteredContacts","useSelector","_jsx","children","map","_jsxs","number","type","onClick","deleteContact","id","Container","Text","Input","Filter","value","onChange","evt","addFilter","target","FormFlex","Form","FieldFlex","Field","Box","_templateObject4","ContactForm","Formik","initialValues","onSubmit","find","elem","checkingContact","toast","addContact","pattern","title","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}